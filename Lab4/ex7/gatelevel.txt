library ieee;
use ieee.std_logic_1164.all;
entity enc83 is
	port(en: in std_logic;
		 d: in std_logic_vector(7 downto 0);
		 y: out std_logic_vector(2 downto 0));
end enc83;


architecture structural of enc83 is
	signal x: std_logic_vector(5 downto 0);
	
	component or_gate 
		port(a,b,c: in std_logic;
			 y:out std_logic );
	end component;
	
	begin
	g1: or_gate port map(a=>d(1), b=>d(3), c=>en, y=>x(0));
	g2: or_gate port map(a=>d(5), b=>d(7), c=>en, y=>x(1));
	g3: or_gate port map(a=>d(2), b=>d(3), c=>en, y=>x(2));
	g4: or_gate port map(a=>d(6), b=>d(7), c=>en, y=>x(3));
	g5: or_gate port map(a=>d(4), b=>d(5), c=>en, y=>x(4));
	g6: or_gate port map(a=>d(6), b=>d(7), c=>en, y=>x(5));
	
	g7: or_gate port map(a=>x(0), b=>x(1), c=>'0', y=>y(0));
	g8: or_gate port map(a=>x(2), b=>x(3), c=>'0', y=>y(1));
	g9: or_gate port map(a=>x(4), b=>x(5), c=>'0', y=>y(2));
	end structural;
	
library ieee;
use ieee.std_logic_1164.all;
entity or_gate is
port(	a: in std_logic;
	    b: in std_logic;
	    c: in std_logic;
	    y: out std_logic
);
end or_gate;
  
architecture dataflow of or_gate is
begin
    y <= a or b or c;
end dataflow;
